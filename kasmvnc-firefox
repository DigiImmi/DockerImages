FROM ghcr.io/linuxserver/baseimage-kasmvnc:alpine319

ENV TITLE=FireFox
ARG FIREFOX_VERSION
ARG APP_START="while true; do firefox; done"
ARG MENU_ICON="/usr/share/icons/hicolor/48x48/apps/firefox.png"
ARG MENU_COMMAND="/usr/bin/firefox"

RUN apk update && apk add --no-cache font-noto \
&& curl -o /kclient/public/icon.png https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/firefox-logo.png \
&& if [ -z ${FIREFOX_VERSION+x} ]; then \
    FIREFOX_VERSION=$(curl -sL "http://dl-cdn.alpinelinux.org/alpine/v3.19/community/x86_64/APKINDEX.tar.gz" | tar -xz -C /tmp \
    && awk '/^P:firefox$/,/V:/' /tmp/APKINDEX | sed -n 2p | sed 's/^V://'); \
   fi \
&& apk add --no-cache firefox==${FIREFOX_VERSION} \
&& FF_VERSION=$(curl -sI https://download.mozilla.org/?product=firefox-latest | awk -F '(releases/|/win32)' '/Location/ {print $2}') \
&& REL_URL="https://releases.mozilla.org/pub/firefox/releases/${FF_VERSION}/win64/xpi/" \
&& LANGS=$(curl -Ls ${REL_URL} | awk -F '(xpi">|</a>)' '/href.*xpi/ {print $2}' | tr '\n' ' ') \
&& EXT_DIR=/usr/lib/firefox/distribution/extensions/ \
&& mkdir -p ${EXT_DIR} \
&& for LANG in ${LANGS}; do \
    LANGCODE=$(echo ${LANG} | sed 's/\.xpi//g'); \
    curl -o ${EXT_DIR}langpack-${LANGCODE}@firefox.mozilla.org.xpi -Ls ${REL_URL}${LANG}; \
done \
&& echo 'mkdir -p /config/html' > /defaults/autostart \
&& echo 'python3 -m http.server --bind 0.0.0.0 12700 --directory /config/html &' > /defaults/autostart \
&& echo "${APP_START}" >> /defaults/autostart \
&& chmod 755 /defaults/autostart \
&& FIREFOX_SETTING="/usr/lib/firefox/browser/defaults/preferences/firefox.js" \
&& echo 'pref("datareporting.policy.firstRunURL", "");' > ${FIREFOX_SETTING} \
&& echo 'pref("datareporting.policy.dataSubmissionEnabled", false);' >> ${FIREFOX_SETTING} \
&& echo 'pref("datareporting.healthreport.service.enabled", false);' >> ${FIREFOX_SETTING} \
&& echo 'pref("datareporting.healthreport.uploadEnabled", false);' >> ${FIREFOX_SETTING} \
&& echo 'pref("trailhead.firstrun.branches", "nofirstrun-empty");' >> ${FIREFOX_SETTING} \
&& echo 'pref("browser.aboutwelcome.enabled", false);' >> ${FIREFOX_SETTING} \
&& sed -i "s|</applications>|  <application type=\"normal\">\n    <decor>no</decor>\n    <maximized>true</maximized>\n    <layer>below</layer>\n  </application>\n  <!-- Make sure YAD is not affected. -->\n  <application type=\"normal\" class=\"Yad\">\n    <decor>yes</decor>\n    <maximized>false</maximized>\n    <layer>above</layer>\n  </application>\n</applications>|" /etc/xdg/openbox/rc.xml \
&& sed -i "s|</menu>|<item label=\"${TITLE}\" icon=\"${MENU_ICON}\"><action name=\"Execute\"><command>${MENU_COMMAND}</command></action></item>\n</menu>|" /defaults/menu.xml \
&& sed -i "s|UI.initSetting('enable_ime', false);|UI.initSetting('enable_ime', true);|" /usr/local/share/kasmvnc/www/dist/main.bundle.js \
&& sed -i "s|UI.initSetting('enable_webrtc', false);|UI.initSetting('enable_webrtc', true);|" /usr/local/share/kasmvnc/www/dist/main.bundle.js \
&& sed -i "s|UI.initSetting('enable_hidpi', false);|UI.initSetting('enable_hidpi', true);|" /usr/local/share/kasmvnc/www/dist/main.bundle.js \
&& sed -i 's/启动鼠标按鍵/激活鼠标按鍵/g; s/需要证件/需要凭证/g; s/钥匙/控键/g; s/向上剪贴板/剪贴板上传/g; s/"CLipboard Down": "剪贴板下"/"Clipboard Down": "剪贴板下载"/g; s/无缝剪贴板/剪贴板无缝共享/g; s/翻译键盘快捷键/键盘快捷键转换/g; s/输入法输入法/输入法模式/g; s/显示虚拟键盘控制/显示虚拟键盘控键/g; s/通过击键切换控制面板/通过按键切换控制面板/g; s/风俗/自定义/g; s/离开/关闭/g; s/"On": "在"/"On": "开启"/g; s/动态质量分钟/动态质量最小值/g' /usr/local/share/kasmvnc/www/app/locale/zh_CN.json \
&& rm -rf /tmp/*
