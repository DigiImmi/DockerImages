name: Docker Image CI

# Controls when the action will run.
on:
  workflow_dispatch:

######
### 修改目标镜像名/即dockerfile文件名
######
env:
  REGISTRY: ghcr.io
  #FILENAME: kasmvnc-firefox
  FILENAME: bt-kx

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    # 这里用于定义 GITHUB_TOKEN 的权限
    permissions:
      packages: write
      contents: read
    
    steps:
      - name: Generate V
        run: |
          echo "TIMESTAMP=$(date +%Y%m%d%H%M%S)" >> $GITHUB_ENV
          REPO_OWNER=${{ github.repository_owner }}
          echo "REPO_OWNER=${REPO_OWNER,,}" >> $GITHUB_ENV 
          # REPO_NAME=${{ github.repository }}
          # echo "REPO_NAME=${REPO_NAME,,}" >> $GITHUB_ENV 
    
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2

      # 登录到 GitHub Packages 容器仓库
      # 注意 secrets.GITHUB_TOKEN 不需要手动添加，直接就可以用
      - name: Log in to the Container registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./${{ env.FILENAME }}
          # 所需要的体系结构，可以在 Available platforms 步骤中获取所有的可用架构
          platforms: 'linux/amd64,linux/arm64'
          push: true
          # 给清单打上多个标签
          tags: |
            ${{ env.REGISTRY }}/${{ env.REPO_OWNER }}/${{ env.FILENAME }}:${{ env.TIMESTAMP }}
            ${{ env.REGISTRY }}/${{ env.REPO_OWNER }}/${{ env.FILENAME }}:latest
