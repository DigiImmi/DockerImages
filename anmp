FROM ghcr.io/digiimmi/baseimage-alpine-3.19:latest

ARG NGINX_VERSION
ARG MARIADB_VERSION

ENV MYSQL_DIR="/config"
ENV DATADIR=$MYSQL_DIR/databases

# install packages
RUN if [ -z ${NGINX_VERSION+x} ]; then NGINX_VERSION=$(curl -sL "http://dl-cdn.alpinelinux.org/alpine/v3.18/main/x86_64/APKINDEX.tar.gz" | tar -xz -C /tmp && awk '/^P:nginx$/,/V:/' /tmp/APKINDEX | sed -n 2p | sed 's/^V://'); fi \
&& if [ -z ${MARIADB_VERSION+x} ]; then MARIADB_VERSION=$(curl -sL "http://dl-cdn.alpinelinux.org/alpine/v3.18/main/x86_64/APKINDEX.tar.gz" | tar -xz -C /tmp && awk '/^P:mariadb$/,/V:/' /tmp/APKINDEX | sed -n 2p | sed 's/^V://'); fi \
&& apk add --no-cache apache2-utils git logrotate nano openssl memcached gnupg \
&& apk add --no-cache nginx nginx-mod-http-brotli nginx-mod-http-dav-ext nginx-mod-http-echo nginx-mod-http-fancyindex \
 nginx-mod-http-geoip nginx-mod-http-geoip2 nginx-mod-http-headers-more nginx-mod-http-image-filter nginx-mod-http-perl \
 nginx-mod-http-redis2 nginx-mod-http-set-misc nginx-mod-http-upload-progress nginx-mod-http-xslt-filter nginx-mod-mail \
 nginx-mod-rtmp nginx-mod-stream nginx-mod-stream-geoip nginx-mod-stream-geoip2 nginx-vim \
&& apk add --no-cache php74 php74-bcmath php74-bz2 php74-ctype php74-curl php74-dom php74-exif php74-fileinfo php74-fpm php74-ftp php74-gd php74-gmp php74-iconv php74-imap php74-intl php74-json php74-ldap \
 php74-mbstring php74-mysqli php74-mysqlnd php74-opcache php74-openssl php74-pdo_mysql php74-pdo_odbc php74-pdo_pgsql php74-phar php74-pdo_sqlite php74-pear php74-pgsql php74-posix php74-session php74-soap \
 php74-simplexml php74-sockets php74-sodium php74-sqlite3 php74-tokenizer php74-xml php74-xmlreader php74-xmlwriter php74-xsl php74-zip php74-zlib php74-pecl-apcu php74-pecl-memcached php74-pecl-redis \
&& apk add --no-cache --repository=http://dl-cdn.alpinelinux.org/alpine/edge/community php74-pecl-mcrypt \
&& apk add --no-cache mariadb==${MARIADB_VERSION} mariadb-backup==${MARIADB_VERSION} mariadb-client==${MARIADB_VERSION} mariadb-common==${MARIADB_VERSION} mariadb-server-utils==${MARIADB_VERSION} \
&& echo 'fastcgi_param  HTTP_PROXY         ""; # https://httpoxy.org/' >> /etc/nginx/fastcgi_params \
&& echo 'fastcgi_param  PATH_INFO          $fastcgi_path_info; # http://nginx.org/en/docs/http/ngx_http_fastcgi_module.html#fastcgi_split_path_info' >> /etc/nginx/fastcgi_params \
&& echo 'fastcgi_param  SCRIPT_FILENAME    $document_root$fastcgi_script_name; # https://www.nginx.com/resources/wiki/start/topics/examples/phpfcgi/#connecting-nginx-to-php-fpm' >> /etc/nginx/fastcgi_params \
&& echo 'fastcgi_param  SERVER_NAME        $host; # Send HTTP_HOST as SERVER_NAME. If HTTP_HOST is blank, send the value of server_name from nginx (default is `_`)' >> /etc/nginx/fastcgi_params \
&& rm -f /etc/nginx/conf.d/stream.conf \
&& rm -f /etc/nginx/http.d/default.conf \
&& if [ "$(readlink /usr/bin/php)" != "php74" ]; then rm -rf /usr/bin/php && ln -s /usr/bin/php74 /usr/bin/php; fi \
&& sed -i "s#;error_log = log/php74/error.log.*#error_log = /config/log/php/error.log#g" /etc/php74/php-fpm.conf \
&& sed -i "s#user = nobody.*#user = abc#g" /etc/php74/php-fpm.d/www.conf \
&& sed -i "s#group = nobody.*#group = abc#g" /etc/php74/php-fpm.d/www.conf \
&& EXPECTED_CHECKSUM="$(php -r 'copy("https://composer.github.io/installer.sig", "php://stdout");')" \
&& php -r "copy('https://getcomposer.org/installer', 'composer-setup.php');" \
&& ACTUAL_CHECKSUM="$(php -r "echo hash_file('sha384', 'composer-setup.php');")" \
&& if [ "$EXPECTED_CHECKSUM" != "$ACTUAL_CHECKSUM" ]; then >&2 echo 'ERROR: Invalid installer checksum' && rm composer-setup.php && exit 1; fi \
&& php composer-setup.php --install-dir=/usr/bin \
&& rm composer-setup.php \
&& ln -s /usr/bin/composer.phar /usr/bin/composer \
&& sed -i "s#/var/log/messages {}.*# #g" /etc/logrotate.conf \
&& sed -i 's#/usr/sbin/logrotate /etc/logrotate.conf#/usr/sbin/logrotate /etc/logrotate.conf -s /config/log/logrotate.status#g' /etc/periodic/daily/logrotate \
&& mkdir -p /var/lib/mysql \
&& git clone https://github.com/linuxserver/docker-baseimage-alpine-nginx.git \
&& git clone https://github.com/linuxserver/docker-mariadb.git \
&& cp -r ./docker-baseimage-alpine-nginx/root/* / \
&& cp -r ./docker-mariadb/root/* / \
&& rm -rf /tmp/* $HOME/.cache ./docker-baseimage-alpine-nginx ./docker-mariadb

# ports and volumes
EXPOSE 80 443 3306
